{"version":3,"sources":["components/bigInput/BigInput.jsx","components/app/App.js","reportWebVitals.js","index.js"],"names":["BigInput","style","name","type","placeholder","register","required","errors","className","App","useState","setUserInfo","date","setDate","useForm","handleSubmit","formState","onSubmit","data","alert","border","userName","userSurname","userPatronymic","disabled","selected","value","dateOfBirth","onFocus","phoneNumber","mask","email","pattern","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAyBeA,EAvBE,SAAC,GAQX,IAPLC,EAOI,EAPJA,MACAC,EAMI,EANJA,KACAC,EAKI,EALJA,KACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,SACAC,EACI,EADJA,OAEA,OACE,sBAAKC,UAAU,gBAAf,UACE,mCACEA,UAAU,YACVP,MAAOA,EACPE,KAAMA,EACNC,YAAaA,GACTC,EAASH,EAAM,CAAEI,eAEtBC,EAAS,mBAAGC,UAAU,aAAb,gKAA2D,OCXrEJ,EACK,6CADLA,EAEE,qBAFFA,EAGQ,mDAHRA,EAIS,4EAJTA,EAKS,oGALTA,EAMG,QANHA,EAOK,iKAPLA,EAQU,4HAGVD,EACE,OADFA,EAGE,OA6HOM,EA1HH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACCC,GADD,aAEQD,mBAASP,GAFjB,mBAETS,EAFS,KAEHC,EAFG,OAQZC,cAHFT,EALc,EAKdA,SACAU,EANc,EAMdA,aACaR,EAPC,EAOdS,UAAaT,OAQf,OACE,qBAAKC,UAAU,UAAf,SACE,sBAAKA,UAAU,aAAf,UACE,oBAAIA,UAAU,oBAAd,8IACA,uBAAMA,UAAU,OAAOS,SAAUF,GATtB,SAACG,GAChBP,EAAYO,GACZC,MAAM,+LAOF,UACE,cAAC,EAAD,CACEjB,KAAK,WACLC,KAAMA,EACNC,YAAaA,EACbC,SAAUA,EACVJ,MAAO,CAAEmB,OAAQb,EAAOc,SAAW,gBAAkB,IACrDd,OAAQA,EAAOc,SACff,UAAQ,IAEV,cAAC,EAAD,CACEJ,KAAK,cACLC,KAAMA,EACNC,YAAaA,EACbC,SAAUA,EACVJ,MAAO,CAAEmB,OAAQb,EAAOe,YAAc,gBAAkB,IACxDf,OAAQA,EAAOe,YACfhB,UAAQ,IAEV,cAAC,EAAD,CACEJ,KAAK,iBACLC,KAAMA,EACNC,YAAaA,EACbC,SAAUA,EACVJ,MAAO,CAAEmB,OAAQb,EAAOgB,eAAiB,gBAAkB,IAC3DhB,OAAQA,EAAOgB,iBAEjB,sBAAKf,UAAU,qBAAf,UACE,yBAAQA,UAAU,cAAlB,UACE,wBAAQgB,UAAQ,EAACC,UAAQ,EAAzB,gCACA,wBAAQC,MAAM,OAAd,wDACA,wBAAQA,MAAM,SAAd,2DAEF,sBAAKlB,UAAU,gBAAf,UACE,mCACEA,UAAU,cACVP,MAAO,CAAEmB,OAAQb,EAAOoB,YAAc,gBAAkB,IACxDxB,KAAMS,EACNR,YAAaA,EACbwB,QAAS,kBAAMf,EAAQV,KACnBE,EAAS,cAAe,CAAEC,UAAU,MAEzCC,EAAOoB,YACN,mBAAGnB,UAAU,aAAb,gKAEA,MAIJ,sBAAKA,UAAU,gBAAf,UACE,cAAC,IAAD,aACEA,UAAU,cACVP,MAAO,CAAEmB,OAAQb,EAAOsB,YAAc,gBAAkB,IACxDC,KAAK,eACL1B,YAAaA,GACTC,EAAS,cAAe,CAAEC,UAAU,MAEzCC,EAAOsB,YACN,mBAAGrB,UAAU,aAAb,gKAEA,MAGJ,sBAAKA,UAAU,gBAAf,UACE,mCACEA,UAAU,cACVP,MAAO,CAAEmB,OAAQb,EAAOwB,MAAQ,gBAAkB,IAClD5B,KAAMA,EACNC,YAAaA,GACTC,EAAS,QAAS,CACpBC,UAAU,EACV0B,QAAS,CACPN,MACE,6JAIPnB,EAAOwB,MACN,mBAAGvB,UAAU,aAAb,yLAEA,SAIN,cAAC,EAAD,CACEN,KAAK,UACLC,KAAMA,EACNC,YAAaA,EACbC,SAAUA,IAEZ,cAAC,EAAD,CACEH,KAAK,eACLC,KAAMA,EACNC,YAAaA,EACbC,SAAUA,IAEZ,wBAAQG,UAAU,aAAlB,6ECjIKyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAI1Bb,M","file":"static/js/main.ab7bdffd.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst BigInput = ({\r\n  style,\r\n  name,\r\n  type,\r\n  placeholder,\r\n  register,\r\n  required,\r\n  errors,\r\n}) => {\r\n  return (\r\n    <div className='input-wrapper'>\r\n      <input\r\n        className='big-input'\r\n        style={style}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        {...register(name, { required })}\r\n      />\r\n      {errors ? <p className='error-text'>Поле является обязательным</p> : ''}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BigInput;\r\n","import React from 'react';\nimport { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport InputMask from 'react-input-mask';\n\nimport './App.sass';\n\nimport BigInput from '../bigInput/BigInput';\n\nconst placeholder = {\n  surname: 'Фамилия',\n  name: 'Имя',\n  patronymic: 'Отчество',\n  dateOfBirth: 'Дата рождения',\n  phoneNumber: 'Мобильный телефон',\n  email: 'Email',\n  address: 'Адрес постоянной регистрации',\n  employerName: 'Название работодателя',\n};\n\nconst type = {\n  text: 'text',\n  tel: 'tel',\n  date: 'date',\n};\n\nconst App = () => {\n  const [userInfo, setUserInfo] = useState('')\n  const [date, setDate] = useState(type.text);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  const onSubmit = (data) => {\n    setUserInfo(data);\n    alert('Форма валидна, отправляется запрос');\n  };\n\n  return (\n    <div className='wrapper'>\n      <div className='validation'>\n        <h1 className='validation__title'>Информация о сотруднике</h1>\n        <form className='form' onSubmit={handleSubmit(onSubmit)}>\n          <BigInput\n            name='userName'\n            type={type.text}\n            placeholder={placeholder.name}\n            register={register}\n            style={{ border: errors.userName ? '1px solid red' : '' }}\n            errors={errors.userName}\n            required\n          />\n          <BigInput\n            name='userSurname'\n            type={type.text}\n            placeholder={placeholder.surname}\n            register={register}\n            style={{ border: errors.userSurname ? '1px solid red' : '' }}\n            errors={errors.userSurname}\n            required\n          />\n          <BigInput\n            name='userPatronymic'\n            type={type.text}\n            placeholder={placeholder.patronymic}\n            register={register}\n            style={{ border: errors.userPatronymic ? '1px solid red' : '' }}\n            errors={errors.userPatronymic}\n          />\n          <div className='form__small-inputs'>\n            <select className='small-input'>\n              <option disabled selected>Пол</option>\n              <option value='male'>Мужской</option>\n              <option value='female'>Женский</option>\n            </select>\n            <div className='input-wrapper'>\n              <input\n                className='small-input'\n                style={{ border: errors.dateOfBirth ? '1px solid red' : '' }}\n                type={date}\n                placeholder={placeholder.dateOfBirth}\n                onFocus={() => setDate(type.date)}\n                {...register('dateOfBirth', { required: true })}\n              />\n              {errors.dateOfBirth ? (\n                <p className='error-text'>Поле является обязательным</p>\n              ) : (\n                ''\n              )}\n\n            </div>\n            <div className='input-wrapper'>\n              <InputMask\n                className='small-input'\n                style={{ border: errors.phoneNumber ? '1px solid red' : '' }}\n                mask='+7 999 99 99'\n                placeholder={placeholder.phoneNumber}\n                {...register('phoneNumber', { required: true })}\n              />\n              {errors.phoneNumber ? (\n                <p className='error-text'>Поле является обязательным</p>\n              ) : (\n                ''\n              )}\n            </div>\n            <div className='input-wrapper'>\n              <input\n                className='small-input'\n                style={{ border: errors.email ? '1px solid red' : '' }}\n                type={type.text}\n                placeholder={placeholder.email}\n                {...register('email', {\n                  required: true,\n                  pattern: {\n                    value:\n                      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                  },\n                })}\n              />\n              {errors.email ? (\n                <p className='error-text'>Введен некорректный адрес почты</p>\n              ) : (\n                ''\n              )}\n            </div>\n          </div>\n          <BigInput\n            name='address'\n            type={type.text}\n            placeholder={placeholder.address}\n            register={register}\n          />\n          <BigInput\n            name='employerName'\n            type={type.text}\n            placeholder={placeholder.employerName}\n            register={register}\n          />\n          <button className='submit-btn'>Сохранить</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}